const { table } = require("console");
const express = require("express");

const { google } = require("googleapis");

const app = express();
const port = 8080;

//This allows us to parse the incoming request body as JSON
app.use(express.json());

async function authSheets() {
    //Function for authentication object
    const auth = new google.auth.GoogleAuth({
        keyFile: "keys.json",
        scopes: ["https://www.googleapis.com/auth/spreadsheets"],
    });

    //Create client instance for auth
    const authClient = await auth.getClient();

    //Instance of the Sheets API
    const sheets = google.sheets({ version: "v4", auth: authClient });

    return {
        auth,
        authClient,
        sheets,
    };
}

app.get("/", async (req, res) => {
    console.log(req)
    const { sheets } = await authSheets();

    // Read rows from spreadsheet
    const id = "1vNTbKQhbJ1U6nK0aS9NU7QxKqWIIYNeJjtBsmcWm9zk";
    const getRows = await sheets.spreadsheets.values.get({
        spreadsheetId: id,
        range: "Sheet1",
    });
    
    //console.log(getRows.data.values)
    let table = []
    getRows.data.values.forEach((row) => {
        //console.log(`${row[0]}, ${row[1]}, ${row[2]}`); // one row
        if (row[0] == "Game ID" && row[1] == "API Key" && row[2] == "Generated By") {
            return;
        } else {
            table.push(JSON.stringify({ "GameID": row[0], "APIKey": row[1], "GeneratedBy": row[2] }))
        }
    })

    table.forEach(game => {
        //console.log(game)
        game = JSON.parse(game) || game
        //console.log(game.APIKey)
        if (game.GeneratedBy === 361210040331272193) {
            return true
        } else {
            return false
        }
    })
    
    res.json({ "authorized": true, "gameId": req.query.GameID })
    console.log(table)
});

// With this, we'll listen for the server on port 8080
app.listen(port, () => console.log(`Listening on port ${port}`));